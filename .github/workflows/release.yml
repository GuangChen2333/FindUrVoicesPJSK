name: Release

on:
  workflow_dispatch:
    inputs:
      release-tag:
        description: 'Release Tag (1.x.x)'
        required: true

jobs:
  build:
    name: Build Executable
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-13, ubuntu-latest, windows-latest ]

    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'

      - name: Install Poetry Action
        uses: snok/install-poetry@v1.4.1
        with:
            virtualenvs-create: false

      - name: Install Dependencies
        run: |
          poetry install --with dev

      - name: Update version
        run: poetry version ${{ inputs.release-tag }}

      - name: Commit and push if changes
        shell: bash --noprofile --norc {0}
        run: |
          changes=$(git diff --name-only origin/master | wc -l)
          if [ $changes -gt 0 ]
          then
            git config user.name 'github-actions[bot]'
            git config user.email 'github-actions[bot]@users.noreply.github.com'
            git add pyproject.toml
            git commit -am "Bump version to ${{ inputs.release-tag }}"
            git tag "v${{ inputs.release-tag }}"
            git push --follow-tags
          fi

      - name: Build Executable
        uses: Nuitka/Nuitka-Action@v1.1
        with:
          nuitka-version: main
          script-name: main.py
          standalone: true
          output-file: FindUrVoicesPJSK-v${{ inputs.release-tag }}-${{ runner.os }}
          company-name: Mooneze
          product-name: FindUrVoicesPJSK
          file-version: ${{ inputs.release-tag }}
          product-version: ${{ inputs.release-tag }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          compression-level: 0
          retention-days: 2
          path: |
            build/*
            !build/main.*

  upload:
    name: Upload Releases
    needs: [ build ]
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: dists/
          merge-multiple: true

      - name: Display files
        run: ls -R
        working-directory: dists

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          name: FindUrVoicesPJSK v${{ inputs.release-tag }}
          tag_name: v${{ inputs.release-tag }}
          files: dists/*
